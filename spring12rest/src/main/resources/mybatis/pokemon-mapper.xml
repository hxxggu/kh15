<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- DTD 선언: xml 기반 문서 내에 그 문서가 특정 문서 형식 정의(DTD)를 따름을 지정하는 것 --> 

<mapper namespace="pokemon">
	
	<!-- 
		CRUD 구문을 태그 형식으로 작성
		- 모든 구문에는 ID를 작성해야 함 (그래야 호출이 가능)
		- resultType에는 이 구문이 반환시킬 데이터의 형태를 작성
	 -->
	<select id="list" resultType="PokemonDto">
		select * from pokemon order by pokemon_no asc
	</select>
	<!--
		myBatis에서는 조회할 때 만들 형태만 알려주며,
		목록인지 단일 데이터인지는 호출할 때 결정함 
	 -->
	<select id="find" resultType="PokemonDto">
		select * from pokemon where pokmeon_no = #{pokemonNo}
	</select>
	<!-- mybatis에서 #은 동적 할당을 의미 -->
	
	<!--
		등록 구문
		- 등록은 실행 결과가 없으므로 resultType이 존재할 수 없음 
	 -->
	 <insert id="add">
	 	insert into pokemon(pokemon_no, pokemon_name, pokemon_type)
	 	values(pokemon_seq.nextval, #{pokemonName}, #{pokemonType})
	 </insert>
	 
	 <!-- 시퀀스 생성 및 등록 -->
	 <select id="sequence" resultType="int">
	 	select pokemon_seq.nextval from dual
	 </select>
	 <insert id="add2">
	 	insert into pokemon(pokemon_no, pokemon_name, pokemon_type)
	 	values(#{pokemonNo}, #{pokemonName}, #{pokemonType})
	 </insert>
	 
	 <!--
	 	삭제
	 	- 실행하기 위해서는 Primary key 1개만 필요 (지금은 int)
	 	- 전달되는 데이터가 원시형 1개인 경우, 이름은 자유롭게 사용 가능
	  -->
	  <delete id="delete">
	  	delete pokemon where pokemon_no = #{pokemonNo}
	  </delete>
	  
	  <!--
	  	수정
	  	- resultType은 작성 금지 
	   -->
	   <update id="edit">
	   	update pokemon
		   	set pokemon_name = #{pokemonName},
		   	pokemon_type = #{pokemonType}
	   	where pokemon_no = #{pokemonNo}
	   </update>
	   
	   <!--
	   	컬럼 - 키워드 검색
	   	- 구문은 정적할당($) 사용
	   	- 데이터는 동적할당(#) 사용
	    -->
	    <select id="search" resultType="pokemonDto">
	    	select * from pokemon
    		where instr(${column}, #{keyword}) > 0
    		<!-- instr(따옴표 추가 없이 그냥 적어야 하는 칸( *정적할당 = ${이름} ) ,
    			따옴표 추가 등을 고려해야 하는 칸 (* 동적할당 = #{이름} )) -->
    		order by ${column} asc, pokemon_no asc
	    </select>
	 
	 <!-- 
	 	목록과 검색을 통합 처리
	 	 - column + keyword 의 유무에 따라 목록 또는 검색을 구현
	 	 - myBatis에서는 && 대신 and, || 대신에 or 을 사용
	  -->
	 <select id="listOrSearch" resultType="PokemonDto">
<!-- 	 select * from pokemon
	 	[조건이 있을 수도 있고 없을 수도 있고]
	 	order by [조건항목], pokemon_no asc
	 	* [ ]: 컬럼과 키워드가 둘 다 있을 때만 존재함 -->
	 	
	 	select * from pokemon
	 	<if test="column != null and keyword != null">
	 	where
<!-- 	 	instr(${column}, #{keyword}) > 0 -->
		${column} like #{keyword} || '%'
	 	</if>
	 	order by
	 	<if test="column != null and keyword != null">
	 	${column} asc,
	 	</if>
	 	pokemon_no asc
	 </select>
</mapper>